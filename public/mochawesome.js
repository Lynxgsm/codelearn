/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/mochawesome-with-mocha@7.1.3/src/mochawesome.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const Base=require("mocha/lib/reporters/base"),mochaPkg=require("mocha/package.json"),uuid=require("uuid"),marge=require("mochawesome-report-generator"),margePkg=require("mochawesome-report-generator/package.json"),conf=require("./config"),utils=require("./utils"),pkg=require("../package.json"),Mocha=require("mocha"),{EVENT_SUITE_END:EVENT_SUITE_END}=Mocha.Runner.constants,{log:log,mapSuites:mapSuites}=utils,testTotals={registered:0,skipped:0};function done(e,t,s,o,r){return marge.create(e,t).then((([e,t])=>{e||t?(t&&log(`Report JSON saved to ${t}`,null,s),e&&log(`Report HTML saved to ${e}`,null,s)):log("No files were generated","warn",s)})).catch((e=>{log(e,"error",s)})).then((()=>{r&&r(o>0?1:0)}))}function consoleReporter(e){if(e)try{return require(`mocha/lib/reporters/${e}`)}catch(t){log(`Unknown console reporter '${e}', defaulting to spec`)}return require("mocha/lib/reporters/spec")}function Mochawesome(e,t){if(this.config=conf(t),!e.stats){require("mocha/lib/stats-collector")(e)}const s={...t.reporterOptions,reportFilename:this.config.reportFilename,saveHtml:this.config.saveHtml,saveJson:this.config.saveJson};this.done=(e,t)=>done(this.output,s,this.config,e,t),testTotals.registered=0,testTotals.skipped=0,Base.call(this,e);const o=s.consoleReporter;if("none"!==o){new(consoleReporter(o))(e)}let r=!1;if(["suite","test","hook","pending"].forEach((t=>{e.on(t,(e=>{e.uuid=uuid.v4()}))})),"ParallelBufferedRunner"===e.constructor.name){const t=e=>{["suites","tests","_beforeAll","_beforeEach","_afterEach","_afterAll"].forEach((t=>{e[t]=e[t]||[]})),e.suites.forEach((e=>t(e)))};e.on(EVENT_SUITE_END,(function(s){s.root&&(t(s),e.suite.suites.push(...s.suites))}))}e.on("end",(()=>{try{if(!r){r=!0;const e=mapSuites(this.runner.suite,testTotals,this.config);if(e)if(1===e.suites.length){const t=e.suites[0];e.file=t.file||e.file,e.fullFile=t.fullFile||e.fullFile}else if(!e.suites.length&&e.tests.length){const t=this.runner.suite.tests[0];e.file=t.file||e.file,e.fullFile=t.fullFile||e.fullFile}const s={stats:this.stats,results:[e],meta:{mocha:{version:mochaPkg.version},mochawesome:{options:this.config,version:pkg.version},marge:{options:t.reporterOptions,version:margePkg.version}}};s.stats.testsRegistered=testTotals.registered;const{passes:o,failures:i,pending:n,tests:a,testsRegistered:l}=s.stats,c=o/(l-n)*100,u=n/l*100;s.stats.passPercent=c,s.stats.pendingPercent=u,s.stats.other=o+i+n-a,s.stats.hasOther=s.stats.other>0,s.stats.skipped=testTotals.skipped,s.stats.hasSkipped=s.stats.skipped>0,s.stats.failures-=s.stats.other,this.output=s}}catch(e){log(`Problem with mochawesome: ${e.stack}`,"error")}}))}module.exports=Mochawesome;
//# sourceMappingURL=/sm/d548638a6926c9635f8d469547fb53d0027288b430a84b2e30e49af0cc23ccb4.map